# Use official golang image as builder
FROM golang:1.21-alpine AS builder

# Install necessary build tools
RUN apk add --no-cache git make build-base

# Set working directory
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the source code
COPY . .

# Build the application
RUN CGO_ENABLED=1 go build -o /app/data-agent ./src/cmd/agent

# Final stage
FROM alpine:latest

# Install required runtime dependencies
RUN apk add --no-cache ca-certificates sqlite-libs

# Set working directory
WORKDIR /app

# Copy the binary from builder
COPY --from=builder /app/data-agent .

# Copy configuration files
COPY src/config/config.yaml ./config/
COPY src/config/character_data_agent.json ./config/

# Create data directory for SQLite
RUN mkdir -p /app/data

# Environment variables (can be overridden at runtime)
ENV LLM_PROVIDER=openai \
    LLM_API_KEY="" \
    TWITTER_BEARER_TOKEN="" \
    TWITTER_API_KEY="" \
    TWITTER_API_KEY_SECRET="" \
    TWITTER_ACCESS_TOKEN="" \
    TWITTER_TOKEN_SECRET="" \
    DISCORD_API_TOKEN="" \
    TELEGRAM_BOT_TOKEN="" \
    CARV_DATA_BASE_URL="" \
    CARV_DATA_API_KEY="" \
    WALLET_PRIVATE_KEY=""

# Volume for persistent data and configs
VOLUME ["/app/data", "/app/config"]

# Command to run the application
CMD ["./data-agent"]